/*
 * net.c
 *
 *  Created on: Nov 2, 2015
 *      Author: strikles
 */

#include <time.h>
#include <unistd.h>

#include <netdb.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <sys/types.h>

#include "net.h"

uint16_t readSocket(int sock, const void* buffer, size_t len)
{
	bzero(buffer, MAX_MSG_LEN);
	char* pBuf = buffer;
	int n = 0, bytesLeft = len - sizeof(char);

	while(bytesLeft > 0)
	{
	    n = read(sock, pBuf, bytesLeft);
	    if (n < 0)
	    {
	        perror("ERROR reading from socket");
	        break;
	    }
	    if(n == 0)
	    {
	        perror("peer shutted down");
	        break;
	    }

	    pBuf += n;
	    bytesLeft -= n;

	    printf("read status: %d, %d\n", n, bytesLeft);
	}

	return n;
}

uint16_t writeSocket(int sock, const void* buffer, size_t len)
{
	bzero(buffer, MAX_MSG_LEN);
	char* pBuf = buffer;
	int n = 0, bytesLeft = len - sizeof(char);

	while(bytesLeft > 0)
	{
	    n = write(sock, pBuf, bytesLeft);
	    if (n < 0)
	    {
	        perror("ERROR writting to socket");
	        break;
	    }
	    if(n == 0)
	    {
	        perror("peer shutted down");
	        break;
	    }

	    pBuf += n;
	    bytesLeft -= n;

	    printf("write status: %d, %d\n", n, bytesLeft);
	}

	return n;
}
