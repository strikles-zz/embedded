/*
 * net.c
 *
 *  Created on: Nov 2, 2015
 *      Author: strikles
 */

#include <time.h>
#include <unistd.h>

#include <netdb.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <sys/types.h>

#include "net.h"

uint16_t readSocket(int sock, char recvline[])
{
	char* pBuf = recvline;
	int n = 0, bytesLeft = MAX_MSG_LEN - 1, bytesDone = 0;

	puts("socket reading...");

	while(bytesLeft > 0)
	{
	    if((n = read(sock, pBuf, bytesLeft)) == -1)
	    {
	        perror("ERROR writing to socket");
	        break;
	    }
	    if(n == 0)
	    {
	        puts("socket closed ?");
	        break;
	    }

	    pBuf += n;
	    bytesLeft -= n;
	    bytesDone +=n;
	}

	recvline[bytesDone] = '\0';
	printf("socket read status: (%d, %d) %s\n", n, bytesLeft, recvline);

	return n;
}

uint16_t writeSocket(int sock, char sendline[])
{
	char* pBuf = sendline;
	int n = 0, bytesLeft = MAX_MSG_LEN - 1;

	puts("socket writing...");

	while(bytesLeft > 0)
	{
	    if((n = write(sock, pBuf, bytesLeft)) == -1)
	    {
	        perror("ERROR writing to socket");
	        break;
	    }

	    pBuf += n;
	    bytesLeft -= n;
	}

	printf("socket write status: (%d, %d) %s\n", n, bytesLeft, sendline);

	return n;
}
