<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="server_8c" kind="file">
    <compoundname>server.c</compoundname>
    <includes local="no">netdb.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="net_8h" local="yes">net.h</includes>
    <includes refid="sensors_8h" local="yes">sensors.h</includes>
    <includes refid="xml_8h" local="yes">xml.h</includes>
    <includes refid="server_8h" local="yes">server.h</includes>
    <includes refid="server_2src_2tests_2test_8h" local="yes">tests/test.h</includes>
    <incdepgraph>
      <node id="132">
        <label>netinet/in.h</label>
      </node>
      <node id="129">
        <label>arpa/inet.h</label>
      </node>
      <node id="140">
        <label>stdint.h</label>
      </node>
      <node id="139">
        <label>stdlib.h</label>
      </node>
      <node id="143">
        <label>sensors.h</label>
        <link refid="sensors_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>tests/test.h</label>
        <link refid="server_2src_2tests_2test_8h"/>
      </node>
      <node id="128">
        <label>netdb.h</label>
      </node>
      <node id="138">
        <label>defines.h</label>
        <link refid="defines_8h"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>pthread.h</label>
      </node>
      <node id="131">
        <label>sys/types.h</label>
      </node>
      <node id="142">
        <label>string.h</label>
      </node>
      <node id="136">
        <label>unistd.h</label>
      </node>
      <node id="134">
        <label>signal.h</label>
      </node>
      <node id="135">
        <label>time.h</label>
      </node>
      <node id="137">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>xml.h</label>
        <link refid="xml_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>sys/socket.h</label>
      </node>
      <node id="141">
        <label>stdio.h</label>
      </node>
      <node id="127">
        <label>server/src/server.c</label>
        <link refid="server.c"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>server.h</label>
        <link refid="server_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="server_8c_1aee1132b8a79e9a6dd0d19a93f7133389" prot="public" static="no">
        <name>SRV_PORT</name>
        <initializer>6423</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="11" column="9" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="11" bodyend="-1"/>
        <referencedby refid="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="server_8c" startline="36" endline="108">main</referencedby>
      </memberdef>
      <memberdef kind="define" id="server_8c_1ab946e2e7f7679350627acfded8e2658b" prot="public" static="no">
        <name>TEST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="12" column="9" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int socket_desc</definition>
        <argsstring></argsstring>
        <name>socket_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="34" column="1" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="34" bodyend="-1"/>
        <referencedby refid="client_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="client_8c" startline="31" endline="98">main</referencedby>
        <referencedby refid="server_8h_1ab6bb131db1ab53e88dd407d39e989a06" compoundref="server_8c" startline="177" endline="184">shutdownHandler</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="36" column="1" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="36" bodyend="108"/>
        <references refid="client_2src_2tests_2test_8c_1a34ff7ae2801158f3bea3fbd06b2c0a33" compoundref="client_2src_2tests_2test_8c" startline="15" endline="46">xml_test</references>
        <references refid="server_8c_1ab6bb131db1ab53e88dd407d39e989a06" compoundref="server_8c" startline="177" endline="184">shutdownHandler</references>
        <references refid="xml_8c_1ac88a4185c09ac0664d9d747f99a784c6" compoundref="xml_8c" startline="226" endline="266">readConfig</references>
        <references refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" compoundref="server_8c" startline="34">socket_desc</references>
        <references refid="net_8h_1aebe97308412c97831f443fb38699c946" compoundref="net_8h" startline="14">PROTOCOL_TYPE</references>
        <references refid="server_8c_1aee1132b8a79e9a6dd0d19a93f7133389" compoundref="server_8c" startline="11">SRV_PORT</references>
        <references refid="server_8c_1a32102343afef8efa4719cc354367b5c4" compoundref="server_8c" startline="113" endline="164">connection_handler</references>
      </memberdef>
      <memberdef kind="function" id="server_8c_1a32102343afef8efa4719cc354367b5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* connection_handler</definition>
        <argsstring>(void *socket_desc)</argsstring>
        <name>connection_handler</name>
        <param>
          <type>void *</type>
          <defname>socket_desc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>new connection handler <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socket</parametername>
</parameternamelist>
<parameterdescription>
<para>fd </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="113" column="1" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="113" bodyend="164"/>
        <references refid="defines_8h_1a51d90ea93d4b55e086cb490f7478e684" compoundref="defines_8h" startline="14">MAX_MSG_LEN</references>
        <references refid="net_8c_1a5648e23ffc8afb543a41ca08b252e2c6" compoundref="net_8c" startline="24" endline="53">readSocket</references>
        <references refid="xml_8c_1a397bd0803103d9d6a9ba58ada6845307" compoundref="xml_8c" startline="22" endline="112">buildReplyXML</references>
        <references refid="net_8c_1adb296d69ad81a26650f6478eb63c78bc" compoundref="net_8c" startline="58" endline="80">writeSocket</references>
        <referencedby refid="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="server_8c" startline="36" endline="108">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="server_8c_1a4a26b396e509e6a65eae2d72ac5a190a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void exitHandler</definition>
        <argsstring>()</argsstring>
        <name>exitHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unused </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="169" column="1" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="169" bodyend="172"/>
        <referencedby refid="server_8h_1ab6bb131db1ab53e88dd407d39e989a06" compoundref="server_8c" startline="177" endline="184">shutdownHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="server_8c_1ab6bb131db1ab53e88dd407d39e989a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shutdownHandler</definition>
        <argsstring>(int s)</argsstring>
        <name>shutdownHandler</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>shutdown handler to write config </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/server/src/server.c" line="177" column="1" bodyfile="/home/strikles/workspace/server/src/server.c" bodystart="177" bodyend="184"/>
        <references refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" compoundref="server_8c" startline="34">socket_desc</references>
        <references refid="xml_8c_1a5a10276da8ff70ec0f44dfdbbda8e8b3" compoundref="xml_8c" startline="198" endline="221">writeConfig</references>
        <references refid="server_8c_1a4a26b396e509e6a65eae2d72ac5a190a" compoundref="server_8c" startline="169" endline="172">exitHandler</references>
        <referencedby refid="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="server_8c" startline="36" endline="108">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>server server prototypes </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Claudio Neto</para></simplesect>
<simplesect kind="date"><para>3/11/2015 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11" refid="server_8c_1aee1132b8a79e9a6dd0d19a93f7133389" refkind="member"><highlight class="preprocessor">#define<sp/>SRV_PORT<sp/>6423</highlight></codeline>
<codeline lineno="12" refid="server_8c_1ab946e2e7f7679350627acfded8e2658b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TEST</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="net_8h" kindref="compound">net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sensors_8h" kindref="compound">sensors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xml_8h" kindref="compound">xml.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="server_8h" kindref="compound">server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TEST</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;tests/test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="server_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc<sp/>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>client_sock,<sp/>c,<sp/>invalid_status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>server,<sp/>client;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>TEST</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="client_2src_2tests_2test_8c_1a34ff7ae2801158f3bea3fbd06b2c0a33" kindref="member">xml_test</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shutdown<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sigIntHandler;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>for<sp/>shutdowncb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>sigint<sp/>?<sp/>sigstp<sp/>+<sp/>sigquit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_handler<sp/>=<sp/><ref refid="server_8c_1ab6bb131db1ab53e88dd407d39e989a06" kindref="member">shutdownHandler</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sigIntHandler.sa_mask);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sigIntHandler,<sp/>NULL);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>last<sp/>know<sp/>configuration<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xml_8c_1ac88a4185c09ac0664d9d747f99a784c6" kindref="member">readConfig</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>socket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref><sp/>=<sp/>socket(AF_INET<sp/>,<sp/><ref refid="net_8h_1aebe97308412c97831f443fb38699c946" kindref="member">PROTOCOL_TYPE</ref><sp/>,<sp/>0))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>sockaddr_in<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(&amp;server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>server);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_port<sp/>=<sp/>htons(<ref refid="server_8c_1aee1132b8a79e9a6dd0d19a93f7133389" kindref="member">SRV_PORT</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref>,(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(server))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>the<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>bind<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Listen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>listen(<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref><sp/>,<sp/>3);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Accept<sp/>and<sp/>incoming<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>incoming<sp/>connections...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>thread_id;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((client_sock<sp/>=<sp/>accept(<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;client,<sp/>(socklen_t*)&amp;c)))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Connection<sp/>accepted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;thread_id,<sp/>NULL,<sp/><ref refid="server_8c_1a32102343afef8efa4719cc354367b5c4" kindref="member">connection_handler</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>&amp;client_sock)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>create<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_status<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_exit<sp/>callback<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_join(<sp/>thread_id<sp/>,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Handler<sp/>assigned&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(client_sock<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;accept<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_status<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>invalid_status;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>callback<sp/>for<sp/>each<sp/>client</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="server_8h_1a99c88edc68ebbf9b09eabca690a3b515" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="server_8c_1a32102343afef8efa4719cc354367b5c4" kindref="member">connection_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>recvline[<ref refid="defines_8h_1a51d90ea93d4b55e086cb490f7478e684" kindref="member">MAX_MSG_LEN</ref>];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sendline[<ref refid="defines_8h_1a51d90ea93d4b55e086cb490f7478e684" kindref="member">MAX_MSG_LEN</ref>];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>socket<sp/>fd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>socket_desc;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>socket<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_size<sp/>=<sp/>0,<sp/>write_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xml<sp/>reply<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invalid_response<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>counter);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero(recvline,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>recvline);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero(sendline,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>sendline);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>client<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((read_size<sp/>=<sp/><ref refid="net_8c_1a5648e23ffc8afb543a41ca08b252e2c6" kindref="member">readSocket</ref>(sock,<sp/>recvline))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>readSocket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>XML<sp/>string<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((invalid_response<sp/>=<sp/><ref refid="xml_8c_1a397bd0803103d9d6a9ba58ada6845307" kindref="member">buildReplyXML</ref>(recvline,<sp/>sendline,<sp/>read_size)))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>invalid<sp/>response&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>msg<sp/>to<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((write_size<sp/>=<sp/><ref refid="net_8c_1adb296d69ad81a26650f6478eb63c78bc" kindref="member">writeSocket</ref>(sock,<sp/>sendline))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>writeSocket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;callback<sp/>cleanup:<sp/>close<sp/>socket<sp/>+<sp/>exit<sp/>thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_exit(NULL);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="server_8h_1a4a26b396e509e6a65eae2d72ac5a190a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="server_8c_1a4a26b396e509e6a65eae2d72ac5a190a" kindref="member">exitHandler</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;clean<sp/>exit<sp/>?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="server_8h_1ab6bb131db1ab53e88dd407d39e989a06" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="server_8c_1ab6bb131db1ab53e88dd407d39e989a06" kindref="member">shutdownHandler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>close(<ref refid="server_8c_1adeadf7cb6916a10c7142ce7d265ab32a" kindref="member">socket_desc</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xml_8c_1a5a10276da8ff70ec0f44dfdbbda8e8b3" kindref="member">writeConfig</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>atexit(<ref refid="server_8c_1a4a26b396e509e6a65eae2d72ac5a190a" kindref="member">exitHandler</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(EXIT_SUCCESS);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/strikles/workspace/server/src/server.c"/>
  </compounddef>
</doxygen>
