<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sensors_8c" kind="file">
    <compoundname>sensors.c</compoundname>
    <includes refid="sensors_8h" local="yes">sensors.h</includes>
    <incdepgraph>
      <node id="92">
        <label>stdint.h</label>
      </node>
      <node id="91">
        <label>stdlib.h</label>
      </node>
      <node id="88">
        <label>common/sensors.c</label>
        <link refid="sensors.c"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>sensors.h</label>
        <link refid="sensors_8h"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>defines.h</label>
        <link refid="defines_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>string.h</label>
      </node>
      <node id="93">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sensors_8c_1a6c45ab1ab93ccb893b64ed84e091ffd5" prot="public" static="no" mutable="no">
        <type><ref refid="struct_reading__t" kindref="compound">Reading_t</ref></type>
        <definition>volatile Reading_t readings[max_sensors]</definition>
        <argsstring>[max_sensors]</argsstring>
        <name>readings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/common/sensors.c" line="13" column="1" bodyfile="/home/strikles/workspace/common/sensors.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sensors_8c_1a06f41875c9c55c4e531cc8b25fb9b427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getSensorReadingStr</definition>
        <argsstring>(eSensor s, char buffer[])</argsstring>
        <name>getSensorReadingStr</name>
        <param>
          <type><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857" kindref="member">eSensor</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper - gets a measurement </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/common/sensors.c" line="18" column="1" bodyfile="/home/strikles/workspace/common/sensors.c" bodystart="18" bodyend="38"/>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a6afd62f6c5a27893b2b94c2854f8514d" compoundref="defines_8h" startline="55">brightness</references>
        <references refid="defines_8c_1aa66266408de980f8f70d74c36e24ef9c" compoundref="defines_8c" startline="19">brightness_str</references>
        <referencedby refid="xml_8h_1a40c4d4b938104b27b9d740ae5fcc0640" compoundref="xml_8c" startline="117" endline="193">buildRequestXML</referencedby>
      </memberdef>
      <memberdef kind="function" id="sensors_8c_1a17189321c81ebc3407443f7a4cb96c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int newMeasurement</definition>
        <argsstring>(eSensor s)</argsstring>
        <name>newMeasurement</name>
        <param>
          <type><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857" kindref="member">eSensor</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper - sets a random measurement value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/common/sensors.c" line="43" column="1" bodyfile="/home/strikles/workspace/common/sensors.c" bodystart="43" bodyend="65"/>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857af7faad7c57f8e1d49eac1fd1ccf83c8c" compoundref="defines_8h" startline="54">battery</references>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a6afd62f6c5a27893b2b94c2854f8514d" compoundref="defines_8h" startline="55">brightness</references>
        <references refid="defines_8h_1a74537517bf20d5af522adc27a07dff0ba43009deba0aecdd959693a524534456d" compoundref="defines_8h" startline="47">max_brightness_levels</references>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857af78a0094726cca324b69464b475ed069" compoundref="defines_8h" startline="56">humidity</references>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a9e67510d0af57b4c4e7f33f88a9a18f8" compoundref="defines_8h" startline="57">noise</references>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857abe4c82e1f6065d36e7cf19c7bbc00005" compoundref="defines_8h" startline="58">personsPassed</references>
        <references refid="struct_reading__t_1ac4f474c82e82cbb89ca7c36dd52be0ed" compoundref="defines_8h" startline="67">Reading_t::value</references>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a9922a43d37bee3212593f77ce4ec82f3" compoundref="defines_8h" startline="59">temperature</references>
        <referencedby refid="sensors_8h_1afa2662e08e833375e2b6d8d713d0d7a3" compoundref="sensors_8c" startline="70" endline="81">generateMeasurements</referencedby>
      </memberdef>
      <memberdef kind="function" id="sensors_8c_1afa2662e08e833375e2b6d8d713d0d7a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t generateMeasurements</definition>
        <argsstring>(void)</argsstring>
        <name>generateMeasurements</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper - loop to generate measurements </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strikles/workspace/common/sensors.c" line="70" column="1" bodyfile="/home/strikles/workspace/common/sensors.c" bodystart="70" bodyend="81"/>
        <references refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a5acc6f72b8d34c16ce89f1e7b129736c" compoundref="defines_8h" startline="60">max_sensors</references>
        <references refid="struct_reading__t_1ac4f474c82e82cbb89ca7c36dd52be0ed" compoundref="defines_8h" startline="67">Reading_t::value</references>
        <references refid="sensors_8c_1a17189321c81ebc3407443f7a4cb96c3e" compoundref="sensors_8c" startline="43" endline="65">newMeasurement</references>
        <references refid="struct_reading__t_1a4bd3978f9fa83a0e08225dca54a00eb6" compoundref="defines_8h" startline="68">Reading_t::elapsed</references>
        <references refid="struct_reading__t_1ae0c690118932b32ef40a74bb6a259acd" compoundref="defines_8h" startline="69">Reading_t::interval</references>
        <referencedby refid="client_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="client_8c" startline="31" endline="98">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>sensors common mock sensors definitions </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Claudio Neto</para></simplesect>
<simplesect kind="date"><para>3/11/2015 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sensors_8h" kindref="compound">sensors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="xml_8c_1a6c45ab1ab93ccb893b64ed84e091ffd5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="struct_reading__t" kindref="compound">Reading_t</ref><sp/><ref refid="sensors_8c_1a6c45ab1ab93ccb893b64ed84e091ffd5" kindref="member">readings</ref>[<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a5acc6f72b8d34c16ce89f1e7b129736c" kindref="member">max_sensors</ref>];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="sensors_8h_1a06f41875c9c55c4e531cc8b25fb9b427" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="sensors_8c_1a06f41875c9c55c4e531cc8b25fb9b427" kindref="member">getSensorReadingStr</ref>(<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857" kindref="member">eSensor</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[])</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(buffer,<sp/>255);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a6afd62f6c5a27893b2b94c2854f8514d" kindref="member">brightness</ref>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="defines_8c_1aa66266408de980f8f70d74c36e24ef9c" kindref="member">brightness_str</ref>[readings[<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a6afd62f6c5a27893b2b94c2854f8514d" kindref="member">brightness</ref>].value]);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>readings[s].value);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Reading:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="sensors_8h_1a17189321c81ebc3407443f7a4cb96c3e" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sensors_8c_1a17189321c81ebc3407443f7a4cb96c3e" kindref="member">newMeasurement</ref>(<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857" kindref="member">eSensor</ref><sp/>s)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857af7faad7c57f8e1d49eac1fd1ccf83c8c" kindref="member">battery</ref>:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a6afd62f6c5a27893b2b94c2854f8514d" kindref="member">brightness</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/><ref refid="defines_8h_1a74537517bf20d5af522adc27a07dff0ba43009deba0aecdd959693a524534456d" kindref="member">max_brightness_levels</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857af78a0094726cca324b69464b475ed069" kindref="member">humidity</ref>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a9e67510d0af57b4c4e7f33f88a9a18f8" kindref="member">noise</ref>:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857abe4c82e1f6065d36e7cf19c7bbc00005" kindref="member">personsPassed</ref>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readings[<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857abe4c82e1f6065d36e7cf19c7bbc00005" kindref="member">personsPassed</ref>].<ref refid="struct_reading__t_1ac4f474c82e82cbb89ca7c36dd52be0ed" kindref="member">value</ref>++;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>readings[<ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857abe4c82e1f6065d36e7cf19c7bbc00005" kindref="member">personsPassed</ref>].<ref refid="struct_reading__t_1ac4f474c82e82cbb89ca7c36dd52be0ed" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a9922a43d37bee3212593f77ce4ec82f3" kindref="member">temperature</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;newMeasurement<sp/>invalid<sp/>sensor:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="sensors_8h_1afa2662e08e833375e2b6d8d713d0d7a3" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="sensors_8c_1afa2662e08e833375e2b6d8d713d0d7a3" kindref="member">generateMeasurements</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ndx;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ndx<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;<sp/><ref refid="defines_8h_1a176eb2b5c4900db14801860a5d7a0857a5acc6f72b8d34c16ce89f1e7b129736c" kindref="member">max_sensors</ref>;<sp/>++ndx)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readings[ndx].<ref refid="struct_reading__t_1ac4f474c82e82cbb89ca7c36dd52be0ed" kindref="member">value</ref><sp/>=<sp/><ref refid="sensors_8c_1a17189321c81ebc3407443f7a4cb96c3e" kindref="member">newMeasurement</ref>(ndx);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readings[ndx].<ref refid="struct_reading__t_1a4bd3978f9fa83a0e08225dca54a00eb6" kindref="member">elapsed</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readings[ndx].<ref refid="struct_reading__t_1ae0c690118932b32ef40a74bb6a259acd" kindref="member">interval</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/strikles/workspace/common/sensors.c"/>
  </compounddef>
</doxygen>
